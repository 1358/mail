sudo: required
dist: trusty
language: php
php:
  - 5.6
  - 7.0

addons:
  apt:
    packages:
    - mysql-server-5.6
    - mysql-client-core-5.6
    - mysql-client-5.6
    - php5-pgsql

services:
  - docker
  - postgresql

env:
  global:
  - CORE_BRANCH=master
  - TEST_JS=FALSE
  - PHP_COVERAGE=FALSE
  - PACKAGE=FALSE
  - NIGHTLY=FALSE
  - secure: Vn7keHV0uFIO0BEIYCJntCwfdolcs7lPWk66mdZXPy53Mgn6prVA2EP9pSUIeMcelXpyhsBPaevDCS5uPMUQ+4LGAbzFh2/xnUL2EsUmidhPF2q+pmyn957JAafMLOY2odvgwnUNvSPizF3NzaeAvBGLtkscUyFizy3klmq6pQuheLvUMKL+bts5fPd3+Dw9fPEz/+MchRr5tudrfpqBBiX0eeolx18je/dI7OUlduakbbjeeiSvvm3ygdKYV2iHP6cYXwvNBPlUj0+ewNxSvnW/zHI5L9vjXIrDWTyFDXzPzQBjRLbl4OyvSKJrxjXGrb/kezxIrCssK9EjZyIo9tffcLJNZIOvZF7y8Eto1AFIonrRYwjvuZCFuXona0CVMBOO6/TBxkfu+21f53HiFVuE7uE3gKItIbDxW9t4NX66ZAuPiAr5pqj7fptJJ+LzgeRs/vM9MS1GmLp4f4DnQoyDeodc+F7zPN14/Og7m9/Yua5qzUgaPnBNg0NzE1PtZOjPWqZq1UQf7ohZQf5p1Kps3f8mkOHdoNXQX77E8Od6anQdzYj4PUkXzswwl7GFDd7C2JyCy4d20TGS29IklToRO5kgZwMU1sMHNTLcelOO69F67LkEow2zKOG1iXKVcY6pDXWiCMZzCPFOK8qPlkRxmwVECj5zTARVLkt/SWg=
  - secure: aUsm/fHNYQ+7e4t36nFguzDyPw1jwnrLyZDKPkmZc3y5NJIGFVTK9iv2IRA5R2atu+R67siL92jAqyL6oLoASpqIpMX8Txg9sBnNSu1flZjKYO0wnNYfg6g3gMGymwwU799bLb69lcTgFmCGhVLrhMcSk7j3uym/UH3bt75nl3dER+Frq1JK73LDrpZmpXcwuhqxq77dhv2C9zyPDd2J8ZBfZjIkDKzL80e6PRXTJIh5MRQ6U74MnWAHCBNtyrSUEtYZu4eVWGvGr0O7DRubTgVgi1JgYLFlFnRGVSKrWZ2VJhU2Rkj3LDGiozyTDEYjcdfraEMOMw38iZKwuugWObmvlAK8ykLOtqqIxsymIQr/798kdgFOsvYjbb3+LhFN6HfR4KV35+WmbK4V0tL/sVtVum8kNXKv9JGPcQ6ZI4g2OBp5bvZpNSvvbW+7Hp03FWRWSSW3Br4sZ4r4h5McP6ngaYZJww3Nl6/wvE0kASodCXkX+gGen6bxAUVwQFi4GnINdOpI6IxU5wJnyUEHWPorgkvp4OzS8pvn5asRIfsFo8/hnOTN1pX9Bdud8V7k7KaWwSMVonsEtA+2VgKQgI8/qt4gK7ThhUXYJekzMkWO7OnCxfBPi9/IS6n297DGsTYW6adRy/dWvZ5CbEE3bQk0ubR7hSz6K36lCt1+kRQ=
  matrix:
  - DB=sqlite

branches:
  only:
  - master
  - "/^stable\\d+(\\.\\d+)?$/"
  - /^v\d++(\.\d+)?+(\.\d+)?+(\.\d+)?$/

cache:
  directories:
  - "$HOME/.composer/cache/files"
  - "$HOME/.npm"
  - "$HOME/.cache/bower"

before_install:
  - php --info

  # Set up DB
  - if [[ "$DB" == 'pgsql' ]]; then createuser -U travis -s oc_autotest; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e 'create database oc_autotest;'; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "CREATE USER 'oc_autotest'@'localhost' IDENTIFIED BY '';"; fi
  - if [[ "$DB" == 'mysql' ]]; then mysql -u root -e "GRANT ALL ON oc_autotest.* TO 'oc_autotest'@'localhost';"; fi

  - sh -c "if [ '$TRAVIS_PHP_VERSION' = '5.4' ]; then curl -s -o $HOME/.phpenv/versions/5.4/bin/phpunit
    https://phar.phpunit.de/phpunit-4.8.9.phar; fi"
  - sh -c "if [ '$TRAVIS_PHP_VERSION' = '5.4' ]; then chmod +x $HOME/.phpenv/versions/5.4/bin/phpunit;
    fi"
  - composer self-update
  - make install-composer-deps
  - make start-imap-docker
  - cd ..
  - git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b $CORE_BRANCH core
  - mv mail core/apps/

before_script:
  # Set up core
  - php -f core/occ maintenance:install --database-name oc_autotest --database-user oc_autotest --admin-user admin --admin-pass admin --database $DB --database-pass=''

  # Set up app
  - php -f core/occ app:enable mail
  # Enable app twice to check occ errors of registered commands
  - php -f core/occ app:enable mail
  - cd core/apps/mail
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then npm install -g npm@latest; fi"
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then make dev-setup; fi"

  # Prepare IMAP test docker
  - make add-imap-account

  # XDebug is only needed if we report coverage -> speeds up other builds
  - if [[ "$PHP_COVERAGE" = "FALSE" ]]; then phpenv config-rm xdebug.ini; fi

script:
  # Check PHP syntax errors
  - find . -name \*.php -not -path './vendor/*' -exec php -l "{}" \;

  # Run server's app code checker
  - php ../../occ app:check-code mail

  # Run JS tests
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then grunt; fi"
  - sh -c "if [ '$TEST_JS' = 'TRUE' ]; then cat ./coverage/*/lcov.info | ./node_modules/coveralls/bin/coveralls.js; fi"

  # Run PHP tests
  - cd tests
  - phpunit --configuration phpunit.xml
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then wget https://scrutinizer-ci.com/ocular.phar;
    fi
  - if [[ "$PHP_COVERAGE" = "TRUE" ]]; then php ocular.phar code-coverage:upload --format=php-clover
    clover.xml; fi

  # Test packaging
  - cd ..
  - if [[ "$PACKAGE" = "TRUE" ]]; then make appstore; fi

  # Upload the nightly to ftp server
  - if [[ "$NIGHTLY" = "TRUE" ]]; then curl --ftp-create-dirs -T build/artifacts/appstore/mail.tar.gz -u $FTP_LOGIN:$FTP_PW ftp://ftp.portknox.net/htdocs/mail/mail.tar.gz; fi

matrix:
  include:
    - php: 7.0
      env: "DB=mysql TEST_JS=TRUE"
    - php: 7.0
      env: "DB=pgsql PHP_COVERAGE=TRUE"
    - php: 5.4
      env: "DB=mysql CORE_BRANCH=stable9 PACKAGE=TRUE"
    - php: 5.5
      env: "DB=mysql CORE_BRANCH=stable10"
  fast_finish: true
